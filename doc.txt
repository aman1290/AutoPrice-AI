1 . set up github
2. clone the repo 
3. make a template.py (reduce time to make directories , make all the project structure at once )

4. push to github
5. update requiremenst and install , update setup.py
6. make loggin custom
*Logging is a systematic way to record events, errors, and information during code execution. Itâ€™s critical for debugging, monitoring, and auditing. 
*suppose you deploy your project in cloud there is no terminal to debug , so the logs are extracted from remote server

7. utils.py update in that common.py
why utils.py --utils.py is like a toolbox. You store small, helpful tools (functions) in one place, so the rest of your project stays clean, modular, and efficient.

8. ensure that you follow best practices while writing functions
ex = using configbox, using ensureannotations
use these libraries to improve your code 

9.data ingestion
do the research if everthing is working fine then update and follw the workflow to enure modularity

## Workflows

1. Update config.yaml
2. Update schema.yaml
3. Update params.yaml
4. Update the entity
5. Update the configuration manager in src config
6. Update the components
7. Update the pipeline 
8. Update the main.py
9. Update the app.py


10. data validation



